<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on @atorizv</title><link>https://athansya.github.io/es/posts/</link><description>Recent content in Posts on @atorizv</description><image><url>https://athansya.github.io/feature.png</url><link>https://athansya.github.io/feature.png</link></image><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 10 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://athansya.github.io/es/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Nix + Home-manager para entornos de desarrollo en WSL</title><link>https://athansya.github.io/es/posts/tools/wsl/minimal_alpine_development_wsl/</link><pubDate>Tue, 10 May 2022 00:00:00 +0000</pubDate><guid>https://athansya.github.io/es/posts/tools/wsl/minimal_alpine_development_wsl/</guid><description>Introducción - Desde hace tiempo, he estado buscando la mejor manera de crear un entorno de desarrollo reproducible que me evite la tediosa tarea de instalar y configurar mis herramientas de trabajo, te estoy hablando a ti VIM. Sé que existen diferentes formas de manejar los famosos archivos .dot, pero quería encontrar una manera de agrupar todo. Fue entonces que me topé con Nix, un lenguaje funcional que actúa como gestor de paquetes y facilita la creación de entornos reproducibles; inclusive existe una distribución de Linux que gira en torno a Nix, se llama NixOs y como podrás adivinar, permite configurar tu sistema y paquetes de manera declarativa y reproducible.</description></item></channel></rss>